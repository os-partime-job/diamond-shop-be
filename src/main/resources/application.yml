server:
  port: 8080
spring:
  datasource:
    url: jdbc:mysql://diamond-shop-db-1.cl22oo0sesz5.ap-southeast-1.rds.amazonaws.com:3306/diamond_shop?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
    username: admin
    password: VAhQsFv{~#S-J<>sdGfgu}ekh1Ta
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 710840491561-5fb0pnlbv3tifhglkgtkkpjqebv0j1j9.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8080
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
minio:
  host: http://178.128.111.191:9000
  accessKey: LhvzlYoqSbl1Go3U2tRF
  secretKey: muIyi1QKM27OXxLofmCUk4C8cR82Qe9N7Ess2M6R
